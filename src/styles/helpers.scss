// media queries
@mixin w {
  @media only screen and (max-width: 1419px) {
    @content;
  }
}

@mixin x {
  @media only screen and (max-width: 1339px) {
    @content;
  }
}

@mixin d {
  @media only screen and (max-width: 1179px) {
    @content;
  }
}

@mixin t {
  @media only screen and (max-width: 1023px) {
    @content;
  }
}

@mixin m {
  @media only screen and (max-width: 767px) {
    @content;
  }
}

@mixin a {
  @media only screen and (max-width: 639px) {
    @content;
  }
}

@mixin s {
  @media only screen and (max-width: 474px) {
    @content;
  }
}

// fonts
@mixin poppins {
  font-family: 'Poppins', sans-serif;
}

@mixin monument-extended {
  font-family: 'Monument Extended', sans-serif;
}

@mixin epilogue {
  font-family: 'Epilogue', sans-serif;
}

// colors
$color-primary: #018df0;
$color-secondary: #01c5ba;
$color-bg: #fff;
$color-bg2: #0b062d;
$color-border-close-modal: #1caaa2;

$color-action-default: #01c5ba;
$color-action-hovered: rgba($color-primary, 0.7);
$color-action-pressed: rgba($color-primary, 0.9);
$color-action-disabled: #211857;

$color-neutral-100: #080134;
$color-neutral-90: #201c18;
$color-neutral-80: #393556;
$color-neutral-60: #6b6785;
$color-neutral-40: #9c99ae;
$color-neutral-20: #ceccd6;
$color-neutral-10: #e6e6eb;
$color-neutral-5: #fcfcfd;
$color-neutral-1: #ffffff29;
$color-neutral-0: #fff;

$color-actions-light-green: #27d1aa;
$color-actions-light-pink: #ff72d2;
$color-actions-light-purple: #c379f6;
$color-actions-light-yellow: #ffd166;
$color-actions-light-blue: #6b6785;
$color-actions-dark-green: #064462;
$color-actions-dark-pink: #561857;
$color-actions-dark-purple: #2d1446;
$color-actions-dark-yellow: #433340;
$color-actions-dark-blue: #211857;
$color-actions-dark-red: #571848;

$color-state-error: #ef466f;
$color-state-success: #45e498;
$color-state-warning: #fae637;

$color-gradient:linear-gradient(89.92deg, #018DF0 1.29%, #5BBBFF 99.94%);
$color-box-shadow:0px 16px 50px rgba(18, 27, 40, 0.3);;
// typography
.text-gradient {
  display: inline-block;

  font-family: 'MD', sans-serif;

  background: $color-gradient;
  background-clip: text;
  -webkit-text-fill-color: transparent;

  &::selection {
    -webkit-text-fill-color: $color-neutral-0;
  }

  ::selection {
    -webkit-text-fill-color: $color-neutral-0;
  }
}

$defaultFlexBoxAlign: center;
$defaultFlexBoxJustify: center;
@mixin flexbox($align: $defaultFlexBoxAlign, $justify: $defaultFlexBoxJustify) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin multiplyRowsEllipsis($rows: 3) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
}

@mixin inlineFlexbox($align: $defaultFlexBoxAlign, $justify: $defaultFlexBoxJustify) {
  display: inline-flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin gradientText() {
  background: $color-gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin body-1 {
  font-size: 24px;
  line-height: (32 / 24);
  letter-spacing: -0.01em;
}

@mixin body-bold-1 {
  font-size: 24px;
  font-weight: 600;
  line-height: (32 / 24);
  letter-spacing: -0.01em;
}

@mixin body-2 {
  font-size: 16px;
  line-height: (24 / 16);
}

@mixin body-bold-2 {
  font-size: 16px;
  font-weight: 500;
  line-height: (24 / 16);
}

@mixin caption-1 {
  font-size: 14px;
  line-height: (24 / 14);
}

@mixin caption-bold-1 {
  font-size: 14px;
  font-weight: 500;
  line-height: (24 / 14);
}

@mixin caption-2 {
  font-size: 12px;
  line-height: (20 / 12);
}

@mixin caption-bold-2 {
  font-size: 12px;
  font-weight: 600;
  line-height: (20 / 12);
}

@mixin hairline-1 {
  font-size: 16px;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
}

@mixin hairline-2 {
  font-size: 12px;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
}

//triangle
@mixin arr($width, $height, $bg, $direction) {
  width: 0;
  height: 0;

  border-style: solid;

  @if $direction == t {
    border-width: 0 ($width / 2 + px) ($height + px) ($width / 2 + px);
    border-color: transparent transparent $bg transparent;
  }

  @if $direction == r {
    border-width: ($height / 2 + px) 0 ($height / 2 + px) ($width + px);
    border-color: transparent transparent transparent $bg;
  }

  @if $direction == b {
    border-width: ($height + px) ($width / 2 + px) 0 ($width / 2 + px);
    border-color: $bg transparent transparent transparent;
  }

  @if $direction == l {
    border-width: ($height / 2 + px) ($width + px) ($height / 2 + px) 0;
    border-color: transparent $bg transparent transparent;
  }

  @if $direction == tl {
    border-width: ($height + px) ($width + px) 0 0;
    border-color: $bg transparent transparent transparent;
  }

  @if $direction == tr {
    border-width: 0 ($width + px) ($height + px) 0;
    border-color: transparent $bg transparent transparent;
  }

  @if $direction == br {
    border-width: 0 0 ($height + px) ($width + px);
    border-color: transparent transparent $bg transparent;
  }

  @if $direction == bl {
    border-width: ($width + px) 0 0 ($height + px);
    border-color: transparent transparent transparent $bg;
  }
}
@mixin container {
  margin: 0 auto;
  max-width: 1440px;
  width: 100%;
  padding: 0 88px;
  @include forDesktopSm {
    padding: 0 32px;
  }
  @include forDesktopBig {
    padding: 0 32px;
  }
}
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)
// placeholder
@mixin placeholder {
  &::placeholder {
    @content;
  }
}

// media query width
@mixin r($width) {
  @media only screen and (max-width: $width + 'px') {
    @content;
  }
}

@mixin rmin($width) {
  @media only screen and (min-width: $width + 'px') {
    @content;
  }
}

@mixin forTablet {
  @media screen and (max-width: 481px) {
    @content;
  }
}

@mixin forDesktopSm {
  @media screen and (max-width: 782px) {
    @content;
  }
}

@mixin forDesktopMiddle {
  @media screen and (max-width: 900px) {
    @content;
  }
}

@mixin forDesktopBig {
  @media screen and (max-width: 1281px) {
    @content;
  }
}

@mixin forDesktopHuge {
  @media screen and (max-width: 1441px) {
    @content;
  }
}

// theme
@mixin dark {
  @at-root :global(.dark-mode) & {
    @content;
  }
}

@mixin dark-body {
  @at-root .dark-mode {
    @content;
  }
}

@mixin dark-common {
  @at-root .dark-mode & {
    @content;
  }
}
